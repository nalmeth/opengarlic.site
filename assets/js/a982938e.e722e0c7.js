"use strict";(self.webpackChunkopengarlic_site=self.webpackChunkopengarlic_site||[]).push([[1490],{8138:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Tutorial/Components/widgets","title":"Widgets","description":"- Smaller components that are combined together to form game screens.","source":"@site/docs/Tutorial/Components/widgets.md","sourceDirName":"Tutorial/Components","slug":"/Tutorial/Components/widgets","permalink":"/docs/Tutorial/Components/widgets","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Screens","permalink":"/docs/Tutorial/Components/screens"},"next":{"title":"Creating a Game","permalink":"/docs/Tutorial/creatingagame"}}');var a=n(4848),o=n(8453);const r={},l="Widgets",s={},c=[{value:"Example",id:"example",level:2},{value:"Existing Widgets",id:"existing-widgets",level:2},{value:"Bubble",id:"bubble",level:3},{value:"DrawingArea",id:"drawingarea",level:3},{value:"DrawingBoard",id:"drawingboard",level:3},{value:"DrawingSidePanel",id:"drawingsidepanel",level:3},{value:"ColorPalette",id:"colorpalette",level:3},{value:"DrawToolPanel",id:"drawtoolpanel",level:3},{value:"GameButton",id:"gamebutton",level:3},{value:"GameInput",id:"gameinput",level:3},{value:"GameNumericInput",id:"gamenumericinput",level:3},{value:"GameSwitch",id:"gameswitch",level:3},{value:"GameText",id:"gametext",level:3},{value:"GameTimer",id:"gametimer",level:3},{value:"PlayerList",id:"playerlist",level:3}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"widgets",children:"Widgets"})}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Smaller components that are combined together to form game screens."}),"\n",(0,a.jsxs)(t.li,{children:["Stored in ",(0,a.jsx)(t.em,{children:"client/src/components/widgets"})]}),"\n",(0,a.jsx)(t.li,{children:"Widgets should also contain their own state/logic if appropriate."}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-jsx",metastring:'title="client/src/components/widgets/Widget0.js"',children:"/**\n * Widget 0\n */\nconst Widget0 = (props) => {\n    return (\n        <>\n            <Typography>Hello from Widget 0.</Typography>\n        </>\n    )\n}\n\nexport default Widget0;\n"})}),"\n",(0,a.jsx)(t.h2,{id:"existing-widgets",children:"Existing Widgets"}),"\n",(0,a.jsx)(t.h3,{id:"bubble",children:"Bubble"}),"\n",(0,a.jsxs)(t.p,{children:["Creates chat bubbles. ",(0,a.jsx)(t.em,{children:"(ex. Standard end screen)"})]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"side:string\t\t// BUBBLE_LEFT or BUBBLE_RIGHT constants\nchildren:mixed\t// Child nodes\n"})}),"\n",(0,a.jsx)(t.h3,{id:"drawingarea",children:"DrawingArea"}),"\n",(0,a.jsxs)(t.p,{children:["Combines ",(0,a.jsx)(t.em,{children:"DrawingBoard"}),", ",(0,a.jsx)(t.em,{children:"DrawingTools"})," and ",(0,a.jsx)(t.em,{children:"DrawingSidePanel"})," to form an entire drawing set."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"showTools:boolean\t\t\t\t\t// Whether to display the drawing tools panel\nstageRef:React.MutableRefObject \t// Link to the stage component in DrawingBoard\ndisplayShapes:Array \t\t\t\t// Array of shapes to display on the DrawingBoard on load\nlockBoard:boolean\t\t\t\t\t// Whether the drawing board is locked to prevent drawing\nMAX_WIDTH:number\t\t\t\t\t// Maximum width of the drawing board\nMAX_HEIGHT:number\t\t\t\t\t// Maximum height of the drawing board\nonChange:function(shapes:Array)\t\t// Function that receives shape data when the state changes\n"})}),"\n",(0,a.jsx)(t.h3,{id:"drawingboard",children:"DrawingBoard"}),"\n",(0,a.jsx)(t.p,{children:"The board to draw on"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"brushColor:string\t\t\t\t\t// Hexidecimal stroke color\nbgColor:string\t\t\t\t\t\t// Hexidecimal background color\nopacity:number\t\t\t\t\t\t// Drawing opacity\nstrokeWidth:number\t\t\t\t\t// The width of the stroke\nlineCap:string\t\t\t\t\t\t// The type of line cap ('butt', 'round', or 'square')\ntension:number\t\t\t\t\t\t// Higher values result in a more curvy line. 0 = no interpolation.\ntool:object \t\t\t\t\t\t// One of the drawing tool objects defined in DrawingTools\ndisplayShapes:Array \t\t\t\t// Array of shapes to display on the DrawingBoard on load\nlockBoard:boolean\t\t\t\t\t// Whether the drawing board is locked to prevent drawing\nMAX_WIDTH:number\t\t\t\t\t// Maximum width of the drawing board\nMAX_HEIGHT:number\t\t\t\t\t// Maximum height of the drawing board\nonChange:function(shapes:Array)\t\t// Function that receives shape data when the state changes\n"})}),"\n",(0,a.jsx)(t.h3,{id:"drawingsidepanel",children:"DrawingSidePanel"}),"\n",(0,a.jsxs)(t.p,{children:["Combines ",(0,a.jsx)(t.em,{children:"DrawToolPanel"})," and ",(0,a.jsx)(t.em,{children:"ColorPalette"})," to form an\nentire tool/color selection set."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"toolSettings:object \t\t\t\t// Object with all the tool settings\n\t\t\t\t\t\t\t\t\t// (brushColor, bgColor, opacity, strokeWidth, lineCap, tension, tool)\nsetTool:function(toolName:string, value:mixed)\t// Hook that returns the name of the tool and it's new value\nresetTools:function \t\t\t\t// Function to call that resets all the tool settings\n"})}),"\n",(0,a.jsx)(t.h3,{id:"colorpalette",children:"ColorPalette"}),"\n",(0,a.jsx)(t.p,{children:"Color selection."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"setColor:function(color:string)\t\t// Hook that returns the selected color (as hexidecimal)\n"})}),"\n",(0,a.jsx)(t.h3,{id:"drawtoolpanel",children:"DrawToolPanel"}),"\n",(0,a.jsx)(t.p,{children:"Panel that displays all the drawing tools."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"activeTool:object \t\t\t\t\t\t\t\t// One of the drawing tool objects defined in DrawingTools\nsetTool:function(toolName:string, value:mixed)\t// Function that receives the name of the tool to and it's new value\n"})}),"\n",(0,a.jsx)(t.h3,{id:"gamebutton",children:"GameButton"}),"\n",(0,a.jsx)(t.p,{children:"MUI Button component styled like other buttons."}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["Accepts all the same props as a MUI Button. Except 'variant' which is locked to 'contained'\nSee: ",(0,a.jsx)(t.a,{href:"https://mui.com/material-ui/react-button/",children:"MUI Button"})]}),"\n"]}),"\n",(0,a.jsx)(t.h3,{id:"gameinput",children:"GameInput"}),"\n",(0,a.jsx)(t.p,{children:"MUI TextField component styled like other inputs."}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["Accepts all the same props as a MUI TextField.\nSee: ",(0,a.jsx)(t.a,{href:"https://mui.com/material-ui/react-text-field/",children:"MUI TextField"})]}),"\n"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"initialValue:string\t\t\t// Value to automatically populate the input\nonUpdate:function(value)\t// Hook to return updated values during change\n"})}),"\n",(0,a.jsx)(t.h3,{id:"gamenumericinput",children:"GameNumericInput"}),"\n",(0,a.jsx)(t.p,{children:"MUI TextField component styled like other inputs. Accepts only numbers.\nCan be used for number ranges."}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["Accepts all the same props as a MUI TextField.\nSee: ",(0,a.jsx)(t.a,{href:"https://mui.com/material-ui/react-text-field/",children:"MUI TextField"})]}),"\n"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"initialValue:number \t\t// Value to automatically populate the input\nonUpdate:function(value)\t// Hook to return updated values during change\nminValue:number \t\t\t// Minimum value to allow (optional)\nmaxValue:number \t\t\t// Maximum value to allow (optional)\n"})}),"\n",(0,a.jsx)(t.h3,{id:"gameswitch",children:"GameSwitch"}),"\n",(0,a.jsx)(t.p,{children:"MUI Switch component."}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["Accepts all the same props as a MUI Switch. This may change in the future.\nSee: ",(0,a.jsx)(t.a,{href:"https://mui.com/material-ui/react-switch/",children:"MUI Switch"})]}),"\n"]}),"\n",(0,a.jsx)(t.h3,{id:"gametext",children:"GameText"}),"\n",(0,a.jsx)(t.p,{children:"MUI Typography component."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"displayText:string\t\t// Text to display\n"})}),"\n",(0,a.jsx)(t.h3,{id:"gametimer",children:"GameTimer"}),"\n",(0,a.jsxs)(t.p,{children:["CountdownCircleTimer component. See ",(0,a.jsx)(t.a,{href:"https://github.com/vydimitrov/react-countdown-circle-timer",children:"react-countdown-circle-timer"})]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"timerKey:string\t\t\t\t\t// Key prop for the component (default 'gameTimer')\nisPlaying:boolean\t\t\t\t// Whether the timer is active (default 'true')\nduration:number\t\t\t\t\t// Number of seconds\ninitialRemainingTime:number \t// The initial remaining time on the timer if different from the duration (default 'null')\nsize:number \t\t\t\t\t// Width and height of the element (default '60')\ncolors:Array \t\t\t\t\t// Colors that change as the timer counts\ncolorsTime:number \t\t\t\t// Indicates the time when a color should switch to the next color.\n\t\t\t\t\t\t\t\t// The first number is the countdown duration and the last one is 0 or goal.\nstrokeWidth:number \t\t\t\t// Stroke width of the timer (default '5')\nonUpdate:function(remainingTime:number) \t// Remaining time update handler\nonComplete:function \t\t\t// On timer complete handler\nchildren:mixed\t\t\t\t\t// Render function to customize the time/content in the center of the circle\n"})}),"\n",(0,a.jsx)(t.h3,{id:"playerlist",children:"PlayerList"}),"\n",(0,a.jsx)(t.p,{children:"Displays list of players."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"icons:boolean\t\t\t\t\t// Displays the owner and kick icon buttons (default 'true')\nbuttonList:boolean\t\t\t\t// Whether the list items are buttons or not (default 'false')\ncode:string\t\t\t\t\t\t// Lobby code for when player kick button is clicked\nowner:string\t\t\t\t\t// Name of the lobby owner\nplayerName:string\t\t\t\t// Name of the player\nplayers:Array<object>\t\t\t// Player object list\nbreakpoints:object \t\t\t\t// Define breakpoints for the list (default {xs:4})\n\t\t\t\t\t\t\t\t// (see: https://mui.com/material-ui/customization/breakpoints/)\nonPlayerKick:function(code:string, playerName:string)\t\t// Function called when a player kick button is clicked\nonPlayerClick:function(index:number)\t// Function called when a player list item button is clicked (when buttonList is 'true')\n"})})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var i=n(6540);const a={},o=i.createContext(a);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);